name: Terraform CI/CD
on:
  push:
    branches:
      - main
env:
  tf_version: '1.6.6'
  tg_version: '0.54.12'
  working_dir: './multi-lxc'

jobs:
  checks:
    runs-on: "self-hosted"  
    container:
      image: ubuntu:22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v1
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

     
  plan:
      runs-on: self-hosted
      container:
        image: ubuntu:22.04
      needs: [ checks ]
      steps:
      - name: 'Checkout'
        uses: actions/checkout@main
          
      - name: Install 1Password CLI    
        run: sudo -s \
          curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
          gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" |
          tee /etc/apt/sources.list.d/1password.list
          mkdir -p /etc/debsig/policies/AC2D62742012EA22/
          curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | \
          tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
          mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
          curl -sS https://downloads.1password.com/linux/keys/1password.asc | \
          gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg
          apt update && apt install 1password-cli

      - name: Configure 1Password CLI  
        uses: 1password/load-secrets-action/configure@v1
        with:
          #service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          connect-host: ${{ secrets.OP_CONNECT_HOST }}
          connect-token: ${{ secrets.OP_CONNECT_TOKEN }}

      - name: Load Terraform Credentials
        id: load-terraform-credentials
        uses: 1password/load-secrets-action@v1
        with:
            export-env: True
        env:
            TF_VAR_ssh_password: op://secrets/Terraform/ssh_password
            TF_VAR_ssh_user: op://secrets/Terraform/ssh_user
            TF_VAR_ciuser: op://secrets/Terraform/ciuser
            TF_VAR_cipassword: op://secrets/Terraform/cipassword
            TF_VAR_ssh_pub_key: op://secrets/Terraform/ssh_pub_key
            TF_VAR_proxmox_api_token_id: op://secrets/ProxmoxAPI/username
            TF_VAR_proxmox_api_token_secret: op://secrets/ProxmoxAPI/password
            TF_VAR_proxmox_api_url: op://secrets/Terraform/host
            TF_VAR_AWS_ACCESS_KEY_ID: op://secrets/Terraform/minio_access_key
            TF_VAR_AWS_SECRET_ACCESS_KEY: op://secrets/Terraform/minio_secret_key
            TF_VAR_AWS_ENDPOINT_URL_S3: op://secrets/Terraform/minio_endpoint

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v1
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'plan'
          
  deploy:
      runs-on: self-hosted
      container:
        image: ubuntu:22.04
      needs: [ plan ]
      if: github.ref == 'refs/heads/main'
      steps:
        - name: 'Checkout'
          uses: actions/checkout@main

        - name: Install 1Password CLI    
          uses: 1password/install-cli-action@v1
  
        - name: Configure 1Password CLI  
          uses: 1password/load-secrets-action/configure@v1
          with:
            #service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
            connect-host: ${{ secrets.OP_CONNECT_HOST }}
            connect-token: ${{ secrets.OP_CONNECT_TOKEN }}
  
        - name: Load Terraform Credentials
          id: load-terraform-credentials
          uses: 1password/load-secrets-action@v1
          with:
              export-env: True
          env:
              TF_VAR_ssh_password: op://secrets/Terraform/ssh_password
              TF_VAR_ssh_user: op://secrets/Terraform/ssh_user
              TF_VAR_ciuser: op://secrets/Terraform/ciuser
              TF_VAR_cipassword: op://secrets/Terraform/cipassword
              TF_VAR_ssh_pub_key: op://secrets/Terraform/ssh_pub_key
              TF_VAR_proxmox_api_token_id: op://secrets/ProxmoxAPI/username
              TF_VAR_proxmox_api_token_secret: op://secrets/ProxmoxAPI/password
              TF_VAR_proxmox_api_url: op://secrets/Terraform/host
              TF_VAR_AWS_ACCESS_KEY_ID: op://secrets/Terraform/minio_access_key
              TF_VAR_AWS_SECRET_ACCESS_KEY: op://secrets/Terraform/minio_secret_key
              TF_VAR_AWS_ENDPOINT_URL_S3: op://secrets/Terraform/minio_endpoint
  
          
        - name: Deploy
          uses: gruntwork-io/terragrunt-action@v1
          with:
            tf_version: ${{ env.tf_version }}
            tg_version: ${{ env.tg_version }}
            tg_dir: ${{ env.working_dir }}
            tg_command: 'apply'